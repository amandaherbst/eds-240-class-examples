---
title: "Lecture 1.3 ggplot2 review"
date: 2024-01-08
---

## Load packages
```{r}
library(tidyverse)
library(palmerpenguins)
```

## Tidy data
```{r}
# untidy data ----
temp_data_wide <- tribble(
  ~date, ~station1, ~station2,  ~station3,
  "2023-10-01", 30.1, 29.8,  31.2,
  "2023-11-01", 28.6, 29.1,  33.4,
  "2023-12-01", 29.9, 28.5,  32.3
)
# this data frame is untidy because there is a variable in the columns (station ID)
# also, there are multiple observations per row
# to make tidy we will need to make new columns: station_id and temp_c


# make tidy ----
temp_data_long <- temp_data_wide %>%  
  pivot_longer(cols = starts_with("station"),
               names_to = "station_id", 
               values_to = "temp_c")
```


## Plot 1

```{r}
# mapping color globally -----
ggplot(data = na.omit(penguins), # na.omit makes sure we don't get a warning message about any NA values
       mapping = aes(x = bill_length_mm,
                     y = bill_depth_mm,
                     color = species)) +
  geom_point() +
  geom_smooth(method = "lm") +
  scale_color_manual(values = c("darkorange", "purple", "cyan4"))

# mapping color locally -----
ggplot(data = na.omit(penguins), # na.omit makes sure we don't get a warning message about any NA values
       mapping = aes(x = bill_length_mm,
                     y = bill_depth_mm)) +
  geom_point(aes(color = species)) +
  geom_smooth(method = "lm")

# piping into a ggplot ----
# penguins %>% 
#   ggplot(aes(x = bill_length_mm,
#              y = bill_depth_mm))


ggplot(penguins, aes(x = body_mass_g, 
                     y = flipper_length_mm,
                     color = body_mass_g)) +
  geom_point() +
  scale_color_gradient(low = "#132B43", high = "#F7DD4C")
```

## Plot 2

```{r}
ggplot(penguins, aes(x = species)) +
  geom_bar()
```

Overriding geom_bar's stat:
```{r}
penguins_summary <- penguins %>% 
  count(species)

ggplot(penguins_summary, aes(x = species, y = n)) +
  geom_bar(stat = "identity")
# other option is just using geom_col but important to know for the future
```

Override default stat mapping
```{r}
ggplot(penguins, aes(x = species, 
                     y = after_stat(prop),
                     # calculate proportion out of whole dataset instead of within each group
                     group = 1)) +
  geom_bar()
```

Position adjustments
```{r}
ggplot(penguins, aes(x = species, fill = island)) +
  geom_bar(position = position_dodge2(preserve = "single"))

# position = "fill" plots proportions == good for stacked bars
# position = "dodge" plots each stack part next to each other
```

Coordinate Systems and Themes
```{r}
ggplot(penguins, aes(x = species)) +
  geom_bar() +
  # by default coord_cartesian is included
  coord_flip() +
  theme_classic() +
  theme(
    axis.title = element_text(size = 17, color = "purple")
  )

# other coord options:
# flip, polar, etc
```

